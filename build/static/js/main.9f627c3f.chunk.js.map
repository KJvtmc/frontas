{"version":3,"sources":["contexts/AuthContext.js","components/Login.js","components/endpoint.js","components/httpService.js","components/CommonErrorHandler.js","components/UserComponent.js","components/UserListComponent.js","containers/UserContainer.js","components/AddProductClass.js","pages/Admin.js","contexts/LoginContext.js","pages/Product.js","pages/Registracija.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","axios","defaults","withCredentials","LoginContainer","useState","username","password","loginError","loggingIn","data","setData","dispatch","useContext","history","useHistory","loginInstance","create","interceptors","response","use","error","a","status","type","payload","className","tabindex","data-bs-dismiss","aria-label","handleChange","event","validateText","target","name","value","validity","valueMissing","id","setCustomValidity","onSubmit","preventDefault","userData","URLSearchParams","append","post","process","headers","then","resp","push","catch","htmlFor","onChange","onInvalid","required","data-toggle","data-placement","title","disabled","role","get","put","delete","request","CommonErrorHandler","children","useMemo","Promise","reject","UserComponent","props","console","log","user","firstName","lastName","scope","UserListComponent","users","map","key","indexOf","UserContainer","state","api","baseURL","setTimeout","usersFromServer","setState","this","Component","AddProductClass","loadProducts","productsFromServer","products","addProduct","e","newProduct","formData","current","productName","imgNuoroda","productIMG","aprasymas","productDescription","res","createRef","Form","ref","Group","controlId","Label","Control","placeholder","min","Button","variant","Table","striped","bordered","hover","item","index","Admin","LoginContext","Product","show","setShow","show2","setShow2","nr","laisva","kabina","setKabina","handleClose","handleClose2","productdetails","setProductdetails","handleClick","element","handleClick2","style","width","pavadinimas","src","alt","vieta","to","vakcinos","kiekis","kabinos","kabinosId","statusas","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","centras","splice","AddProduct","pacientas","Number","max","Select","kabinosid","initState","isAuthenticated","reducer","action","NoMatch","App","useReducer","useEffect","http","Provider","exact","path","component","Registracija","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.9f627c3f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AuthContext = React.createContext(null);\n\nexport default AuthContext;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n// import swal from \"sweetalert\";\nimport apiEndpoint from \"./endpoint\";\nimport AuthContext from \"../contexts/AuthContext\";\naxios.defaults.withCredentials = true;\n\nexport const LoginContainer = () => {\n  const initState = {\n    username: \"\",\n    password: \"\",\n    loginError: false,\n    loggingIn: false,\n  };\n\n  const [data, setData] = React.useState(initState);\n  const { dispatch } = React.useContext(AuthContext);\n  const history = useHistory();\n\n  const loginInstance = axios.create();\n\n  loginInstance.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n      const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n      if (!expectedError) {\n        dispatch({\n          type: \"ERROR\",\n          payload: null,\n        });\n        setData({\n          ...data,\n          loginError: false,\n          loggingIn: false,\n          username: \"\",\n          password: \"\",\n        });\n        return (\n          <div className=\"modal\" tabindex=\"-1\">\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\">Įvyko klaida, puslapis nurodytu adresu nepasiekiamas</h5>\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n              </div>\n            </div>\n          </div>)\n        \n      } else if (error.response) {\n        if (error.response.status === 401) {\n          setData({\n            ...data,\n            loginError: true,\n            loggingIn: false,\n            username: \"\",\n            password: \"\",\n          });\n        } else if (error.response.status === 403) {\n          setData({\n            ...data,\n            loginError: false,\n            loggingIn: false,\n            username: \"\",\n            password: \"\",\n          });\n          return (\n            <div className=\"modal\" tabindex=\"-1\">\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Prieiga uždrausta</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n\n          \n        }\n      }\n    }\n  );\n\n  const handleChange = (event) => {\n    validateText(event);\n    setData({\n      ...data,\n      loginError: false, // po nesėkmingo įvedimo pradėjus vesti duomenis iš naujo, paslepia klaidos pranešimą\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setData({\n      ...data,\n      loginError: false,\n      loggingIn: true,\n    });\n    let userData = new URLSearchParams();\n    userData.append(\"username\", data.username);\n    userData.append(\"password\", data.password);\n    loginInstance\n      .post(`${apiEndpoint}/login`, userData, {\n        headers: { \"Content-type\": \"application/x-www-form-urlencoded\" },\n      })\n      .then((resp) => {\n        dispatch({\n          type: \"LOGIN\",\n          payload: resp.data,\n        });\n        history.push(\"/home\");\n      })\n      .catch(() => { })\n  };\n\n  const validateText = (event) => {\n    const target = event.target;\n\n    if (target.validity.valueMissing && target.id === \"username\") {\n      target.setCustomValidity(\"Būtina įvesti naudotojo prisijungimo vardą\");\n    } else if (target.validity.valueMissing && target.id === \"password\") {\n      target.setCustomValidity(\"Būtina įvesti slaptažodį\");\n    } else {\n      target.setCustomValidity(\"\");\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center min-vh-100\">\n      <div className=\"card p-5\">\n        {/* Dropped form-specific layout classes for our grid system. Use our grid and utilities instead \n      of .form-group, .form-row, or .form-inline. */}\n        {/* Form labels now require .form-label. */}\n        {/* <img\n          src={logo}\n          alt=\"Vilniaus miesto savivaldybės vaikų darželių informacinė sistema\"\n          className=\"img-flex mb-3\"\n        /> */}\n        <form onSubmit={handleSubmit}>\n          <h3>Prisijungti</h3>\n          <div className=\"m-3\">\n            <label htmlFor=\"username\" className=\"form-label\">\n              Naudotojo vardas <span className=\"fieldRequired\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              id=\"username\"\n              value={data.username}\n              onChange={handleChange}\n              onInvalid={validateText}\n              required\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Įveskite naudotojo prisijungimo vardą\"\n            />\n          </div>\n\n          <div className=\"m-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Slaptažodis <span className=\"fieldRequired\">*</span>\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={handleChange}\n              onInvalid={validateText}\n              required\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Įveskite naudotojo slaptažodį\"\n            />\n          </div>\n\n          {/* <button\n            type=\"button\"\n            className=\"btn btn-link\"\n            style={{ paddingLeft: \"0px\" }}\n            onClick={() => {\n              return ForgotPasswordWindow();\n            }}\n            formNoValidate\n          >\n            Pamiršau slaptažodį\n          </button> */}\n          {/* Renamed .float-left and .float-right to .float-start and .float-end. */}\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary float-end\"\n            id=\"btnLogin\"\n            disabled={data.loggingIn}\n          >\n            {data.loggingIn ? \"Jungiamasi...\" : \"Prisijungti\"}\n          </button>\n        </form>\n        {data.loginError && (\n          <span\n            className=\"alert alert-danger mt-3\"\n            role=\"alert\"\n            id=\"incorrectLoginData\"\n          >\n            Neteisingas prisijungimo vardas ir/arba slaptažodis!\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginContainer;","//prieš yarn build užkomentuoti localhost ir atkomentuoti šitą endpoint:\nconst apiEndpoint = process.env.PUBLIC_URL;\n\n//dirbant lokaliai per yarn start paleidus react app per localhost:3000\n//const apiEndpoint = \"http://localhost:8080\"\n\nexport default apiEndpoint;\n","\nimport axios from 'axios';\n\nimport '../App.css';\n\n//default response when an unexpected error occurs\n//hadle expected client errors separately\n\n\n\n//http service object with crud methods (current axios)\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    request: axios.request\n};\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport AuthContext from \"../contexts/AuthContext\";\nimport axios from 'axios';\n\nconst CommonErrorHandler = ({children}) => {\n    const history = useHistory();\n    const { dispatch } = React.useContext(AuthContext);\n    \n    React.useMemo(() => {\n        axios.interceptors.response.use(response => response, async(error) => {\n            const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n            if (!expectedError) {\n\n                dispatch({\n                    type: \"ERROR\",\n                    payload: null\n                })\n                return(\n                    <div className=\"modal\" tabindex=\"-1\">\n                      <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Įvyko klaida, puslapis nurodytu adresu nepasiekiamas</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                );\n                \n            } else if (error.response.status === 401) {\n                dispatch({\n                    type: \"ERROR\",\n                    payload: error.response.status\n                })\n                return(\n                    <div className=\"modal\" tabindex=\"-1\">\n                      <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Neprisijungta</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                );\n                \n                \n            } else if (error.response.status === 403) {\n                dispatch({\n                    type: \"ERROR\",\n                    payload: error.response.status\n                })\n                return(\n                    <div className=\"modal\" tabindex=\"-1\">\n                      <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Prieiga uždrausta</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                );\n                \n                \n            }\n            else return Promise.reject(error);\n            history.push(\"/\")\n        });\n    }, [dispatch, history])\n    return children;\n}\n\nexport default CommonErrorHandler\n","import React from \"react\";\n\nconst UserComponent = props => {\n    console.log('in user component ');\n    console.log(props);\n    const { id, firstName, lastName } = props.user;\n    console.log(id);\n    return (\n        <tr>\n            <th scope=\"row\"></th>\n            <td >{id}</td>\n            <td > {firstName}</td>\n            <td >{lastName}</td>\n            \n        </tr>\n    )\n}\nexport default UserComponent;","import React from \"react\";\nimport UserComponent from \"./UserComponent\";\n\nconst UserListComponent = ({ users }) => {\n    console.log(\"UserListComponent \");\n    console.log(users);\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Firstname</th>\n                    <th scope=\"col\">Lastname</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user) => (\n                    <UserComponent key={(users.indexOf(user))} user={user} />\n                ))}\n            </tbody>\n        </table>\n    )\n\n}\nexport default UserListComponent","\nimport UserListComponent from \"../components/UserListComponent\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\n// axios.get('http://localhost:8080/api/users')\n//         .then( (response) => {\n//         console.log(response);\n//         return response;\n//         })\n//         .catch( (error) => {\n//         console.log(error);\n//         });\n\nclass UserContainer extends Component {\n\n    \n    constructor() {\n        super();\n        this.state = {\n            users: [\n                {\n                    id: null,\n                    firstName: \"loading from DB\",\n                    lastName: \"loading from DB\",\n                }\n            ]\n        };\n        this.api = axios.create({\n            baseURL: \"http://localhost:8081/korys-war/api/users\"\n        });\n    }\n\n    componentDidMount() {\n        const loadUsers = async () => {\n            try{\n            const response = await this.api.get(\"/\");\n            // console.log(\"state \");\n            // console.log(response);\n            const usersFromServer = response.data;\n            // console.log(\"from service \");\n            // console.log(usersFromServer);\n            this.setState({ users: usersFromServer });\n            // console.log(\"state \");\n            // console.log(this.state.users);\n        }catch(error){\n            console.log(error);\n        }\n        }\n        setTimeout(loadUsers, 1000)\n    }\n\n    render() {\n        if (this.state.users !== null) {\n            return (\n                <div className=\"container-flexible\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <UserListComponent users={this.state.users} />\n                        </div>\n                    </div>\n                </div >\n            );\n        }\n        else {\n            return (\n                <div className=\"container-flexible\">\n                    <div className=\"row\">\n                        <h1>No registered users found</h1>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\nexport default UserContainer;\n","import { Form, Button, Table } from \"react-bootstrap\";\nimport React, { Component, createRef } from 'react';\nimport axios from 'axios';\n\nexport default class AddProductClass extends Component {\n    constructor() {\n        super();\n        this.state = {\n            products: [],\n        }\n        this.api = axios.create({\n            baseURL: \"http://localhost:8081/korys-npm/vakcinacija/centrai\"\n        });\n        this.loadProducts();\n        setTimeout(this.loadProducts, 1000);\n        this.formData = createRef();\n        \n\n    }\n\n    loadProducts = async () => {\n        try {\n            const response = await this.api.get(\"/\");\n            // console.log(\"state \");\n            // console.log(response);\n            const productsFromServer = response.data;\n            // console.log(\"from service \");\n            // console.log(usersFromServer);\n            this.setState({ products: productsFromServer });\n            // console.log(\"state \");\n            // console.log(this.state.products);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    addProduct = async (e) => {\n        e.preventDefault();\n\n        const newProduct = {\n            title: this.formData.current.productName.value,\n            imgNuoroda: this.formData.current.productIMG.value,\n            aprasymas: this.formData.current.productDescription.value\n        }\n        let res = await this.api.post('/', { newProduct });\n        console.log(res);\n        this.state.products.push(newProduct);\n        this.loadProducts();\n    }\n    // increment Quantity by 1\n    // incrementQuantity = (e) => {\n    //     const currentIndex = e.target.value;\n    //     this.state.products[currentIndex].productQuantity = this.state.products[currentIndex].productQuantity + 1;\n    //     this.setState({\n    //         products: this.state.products\n    //     });\n    // }\n\n    // decrement Quantity by 1\n    // decrementQuantity = (e) => {\n    //     const currentIndex = e.target.value;\n    //     if (this.state.products[currentIndex].productQuantity > 0) {\n    //         this.state.products[currentIndex].productQuantity = this.state.products[currentIndex].productQuantity - 1;\n    //         this.setState({\n    //             products: this.state.products\n    //         });\n    //     }\n    // }\n\n\n\n    render() {\n        return (\n            <div >\n                <Form onSubmit={this.addProduct} ref={this.formData} >\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicProductName\">\n                        <Form.Label>Vakcinacijos centro pavadinimas</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"pavadinimas...\" name=\"productName\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPrice\">\n                        <Form.Label>Nuoroda į paveiksliuką</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"nuoroda...\" name=\"imgNuoroda\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicQuantity\">\n                        <Form.Label>Aprašymas</Form.Label>\n                        <Form.Control type=\"text\" min=\"0\" placeholder=\"aprašymas- ne mažiau kaip 6 žodžiai...\" name=\"aprasymas\" />\n                    </Form.Group >\n                    <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                        Pridėti į sąrašą\n                    </Button>\n                </Form>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>Nr.</th>\n                            <th>Pavadinimas</th>\n                            <th>Nuoroda</th>\n                            <th>Aprašymas</th>\n                            {/* <th>-</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.products.map((item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{index + 1}</td>\n                                        <td>{item.title}</td>\n                                        <td>{item.imgNuoroda}</td>\n                                        <td>{item.aprasymas}</td>\n                                        {/* <td>\n                                            <Button variant=\"success\" onClick={(e) => this.incrementQuantity(e)}\n                                                value={index} >+</Button>\n                                            <Button variant=\"danger\" onClick={(e) => this.decrementQuantity(e)}\n                                                value={index}\n                                            >-</Button>\n                                        </td> */}\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </Table>\n            </div >\n\n        )\n\n    };\n}","import React, {Component} from 'react';\nimport UserContainer from '../containers/UserContainer';\nimport AddProductClass from '../components/AddProductClass';\n\nclass Admin extends Component {\n    render() {\n        return (\n            <div >\n                <header className=\"px-3 text-center\">\n                    <h2>Puslapio administravimas   </h2>\n                </header>\n                <main className=\"px-3\">\n                    <h3>Vakcinacijos centrai</h3>\n                    <AddProductClass />\n                    <h3>Registruoti pacientai</h3>\n                    <UserContainer />\n                </main>\n            </div>\n        );\n    }\n}\n\n\nexport default Admin;","import {createContext} from 'react';\n\nexport const LoginContext =createContext({});","import { Form, Button, Table, Modal } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport React, { useContext, useState } from 'react';\nimport { LoginContext } from '../contexts/LoginContext';\n// import Login from '../components/Login';\n// import ShowUser from '../components/ShowUser';\n\nfunction Product() {\n    const [show, setShow] = useState(false);\n    const [show2, setShow2] = useState(false);\n    const [kabina, setKabina] = useState({\n        nr:0,\n        laisva:false,\n    });\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const handleClose2 = () => setShow2(false);\n    const handleShow2 = () => setShow2(true);\n   \n\n    // const { cart, setCart, productdetails, showusername} = useContext(LoginContext);\n    const { productdetails, setProductdetails } = useContext(LoginContext);\n    \n\n    const handleClick = (element) => {\n\n        handleShow();\n        setKabina(element\n            // nr:element.nr,\n            // laisva:!element.laisva\n        );\n        console.log(element)\n    }\n\n    const handleClick2 = (element) => {\n\n        handleShow2();\n        setKabina(element\n            // nr:element.nr,\n            // laisva:!element.laisva\n        );\n        console.log(element)\n    }\n\n    const keistiStatusa = () => {\n        console.log(\"hghg\");\n        var newProduct=productdetails;\n        console.log(newProduct);\n        var kabinos = newProduct.kabinos;\n        console.log(kabina);\n        var index =kabinos.indexOf(kabina);\n        console.log(index);\n        if (index !==-1){\n            kabinos[index]={\n                id: kabina.id,\n                centras: null,\n                kabinosId: kabina.kabinosId,\n                statusas: !kabina.statusas,\n            }\n        }\n        console.log(kabinos);\n        setProductdetails(newProduct);\n        console.log(productdetails);\n        handleClose();\n    }\n\n    const naikintiKabina = () => {\n        console.log(\"naikinimas\");\n        var newProduct=productdetails;\n        console.log(newProduct);\n        var kabinos = newProduct.kabinos;\n        console.log(kabina);\n        var index =kabinos.indexOf(kabina);\n        console.log(index);\n        if (index !==-1){\n            kabinos.splice(index, 1)\n        }\n        console.log(kabinos);\n        setProductdetails(newProduct);\n        console.log(productdetails);\n        handleClose2();\n    }\n\n    return (\n        <div>\n\n            <div className=\"card\" style={{ width: \"18 rem\" }}>\n                <h1>{productdetails.pavadinimas} </h1>\n\n                <img src={productdetails.imgNuoroda} className=\"card-img-top\" alt=\"item\"></img>\n                <div className=\"card-body \">\n                    <h5 className=\"card-title\">{productdetails.pavadinimas}</h5>\n                    <p className=\"card-text\">{productdetails.aprasymas}</p>\n                    <p className=\"card-text\">Centro vieta: {productdetails.vieta} </p>\n                    <Link to='/pages/Admin' >\n                        <button className=\"btn btn-primary\" >Pakeisti vietą</button>\n                    </Link>\n                    <p className=\"card-text\">Turimos vakcinos: </p>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Vakcina</th>\n                                <th>Kiekis</th>\n\n                                {/* <th>-</th> */}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productdetails.vakcinos.map(element => {\n                                    // this.state.products.map((item, index) => {\n                                        \n                                    return (\n                                        <tr key={element.pavadinimas}>\n                                            <td>{element.pavadinimas}</td>\n                                            <th>{element.kiekis}</th>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    <p className=\"card-text\">Kabinos: </p>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Kabinos nr.</th>\n                                <th>Statusas</th>\n                                <th>Pakeisti statusą</th>\n                                <th>Pašalinti</th>\n\n                                {/* <th>-</th> */}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productdetails.kabinos.map(element => {\n                                    // this.state.products.map((item, index) => {\n                                        \n                                    return (\n                                        <tr key={element.kabinosId}>\n                                            <td>{element.kabinosId}</td>\n                                            <th>{element.statusas ? \"Laisva\" : \"Užimta\"}</th>\n                                            <td>\n                                                <Button variant=\"danger\" onClick={()=>handleClick(element)}\n                                                >Pakeisti statusą</Button>\n                                            </td>\n                                            <td>\n                                                <Button variant=\"danger\" onClick={()=>handleClick2(element)}\n                                                >-</Button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Įspėjimas</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Ar tikrai norite pakeisti kabinos statusą?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={keistiStatusa}>\n                                Keisti\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Nekeisti\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Modal show={show2} onHide={handleClose2}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Įspėjimas</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Ar tikrai norite panaikinti kabiną?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={naikintiKabina}>\n                                Naikinti\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose2}>\n                                Nenaikinti\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Form  >\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicProductName\">\n                            <Form.Label>Kabinos nr.</Form.Label>\n                            <Form.Control type=\"number\" name=\"productName\" />\n                        </Form.Group>\n\n                        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                            Pridėti į sąrašą\n                        </Button>\n                    </Form>\n                    <Link to={`/registracija`} >\n                        <button className=\"btn btn-primary\" onClick={() => setProductdetails(productdetails)} >Registruoti pacientą</button>\n                    </Link>\n                    <Link to='/' >\n                        <button className=\"btn btn-primary\"onClick={() => setProductdetails(productdetails)} >Grįžti</button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Product;","import { Form, Button } from \"react-bootstrap\";\nimport {  createRef, useContext } from 'react';\nimport { LoginContext } from '../contexts/LoginContext';\nimport React from 'react';\nimport UserContainer from '../containers/UserContainer';\nimport axios from 'axios';\n\n// forma naudojantis funkcijomis, ref, hooks\nexport default function AddProduct() {\n\n    //type of data [stateData, stateUpdateFunction] = useState(initialData)\n    //let initialValue = [];\n    const { productdetails } = useContext(LoginContext);\n    // const [products, setProduct] = useState(initialValue);\n    const formData = createRef();\n    let api = axios.create({\n        baseURL: \"http://localhost:8081/korys-war/api/users\"\n    });\n    //addproduct handler\n    const addProduct = (e) => {\n        e.preventDefault();\n        // kitas būdas paimti values iš formos\n        // const formData = e.target;\n        // const pacientas = {\n        //     firstName: formData.firstName.value,\n        //     lastName: formData.lastName.value,\n        //     id: formData.id.value\n        // }\n\n        //  būdas paimti values iš formos su react metodu createRef\n        const pacientas = {\n\n            id: Number(formData.current.id.value),\n            firstName: formData.current.firstName.value,\n            lastName: formData.current.lastName.value\n            \n        }\n        // add a new product inside products array\n        console.log(pacientas);\n        //api.put(url:\"\",data:pacientas,);\n        // setProduct([...products, pacientas]);\n    }\n    // // increment Quantity by 1\n    // const incrementQuantity = (e) =>{\n    //     const currentIndex = e.target.value;\n    //     products[currentIndex].id= products[currentIndex].id+1;\n    //     setProduct([...products])\n    // }\n\n    // // decrement Quantity by 1\n    // const decrementQuantity = (e) =>{\n    //     const currentIndex = e.target.value;\n    //     if (products[currentIndex].id>0){\n    //     products[currentIndex].id= +products[currentIndex].id-1;\n    //     setProduct([...products])\n    //     }\n    // }\n\n    return (\n        <div>\n            <div>\n                <h1> Registracija į {productdetails.pavadinimas}</h1>\n            </div>\n\n            <Form onSubmit={addProduct} ref={formData}>\n                <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                    <Form.Label>Vardas</Form.Label>\n                    <Form.Control type=\"text\" name=\"firstName\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formLastName\">\n                    <Form.Label>Pavardė</Form.Label>\n                    <Form.Control type=\"text\" name=\"lastName\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formId\">\n                    <Form.Label>Asmens kodas</Form.Label>\n                    <Form.Control type=\"number\" min=\"300000000\" max=\"499999999\" name=\"id\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Pasirinkite vakciną</Form.Label>\n                    <Form.Select >\n                        {productdetails.vakcinos.map(element =>\n                            <option key={element.pavadinimas} >{element.pavadinimas} Turimas kiekis:{element.kiekis}</option>\n                        )}\n                        {/* <option>{productdetails.va}</option>\n                            <option>Pfizer–BioNTech (Comirnaty): {productdetails.comirnaty}</option>\n                            <option>Oxford–AstraZeneca (Vaxzevria): {productdetails.vaxzevria}</option>\n                            <option>Johnson & Johnson (Janssen): {productdetails.janssen}</option>\n                            <option>Pfizer–BioNTech (5-11 metų vaikams): {productdetails.biontech}</option> */}\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Pasirinkite kabiną</Form.Label>\n                    <Form.Select >\n                        {productdetails.kabinos.map(element =>\n                            <option key={element.kabinosid} >{element.kabinosid} Statusas:{element.statusas ? \"laisva\" : \"užimta\"}</option>\n                        )}\n                        {/* <option>{productdetails.va}</option>\n                            <option>Pfizer–BioNTech (Comirnaty): {productdetails.comirnaty}</option>\n                            <option>Oxford–AstraZeneca (Vaxzevria): {productdetails.vaxzevria}</option>\n                            <option>Johnson & Johnson (Janssen): {productdetails.janssen}</option>\n                            <option>Pfizer–BioNTech (5-11 metų vaikams): {productdetails.biontech}</option> */}\n                    </Form.Select>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={addProduct}>\n                    Registruoti\n                </Button>\n\n            </Form>\n            <h3>Registruoti pacientai</h3>\n            <UserContainer />\n\n        </div>\n    )\n}\n","\nimport './App.css';\n// import  { useContext } from 'react';\n// import ProductListContainer from './containers/ProductListContainer';\n// import ServicesContext from './ServicesContext';\nimport Login from './components/Login';\n// import ShowUser from './components/ShowUser';\n// import { LoginContext } from './contexts/LoginContext';\nimport React, { useEffect, useReducer } from \"react\";\nimport apiEndpoint from \"./components/endpoint\";\nimport http from \"./components/httpService\";\nimport AuthContext from \"./contexts/AuthContext\";\n\nimport CommonErrorHandler from \"./components/CommonErrorHandler\"\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Admin from './pages/Admin';\nimport Product from './pages/Product';\nimport Registracija from './pages/Registracija';\n// import {LoginContext} from './contexts/LoginContext';\n\nvar initState = {\n  isAuthenticated: false,\n  username: null,\n  //role: null,\n  error: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        isAuthenticated: true,\n        username: action.payload.username,\n        //role: action.payload.role,\n        error: null,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null,\n        //role: null,\n        error: null,\n      };\n    case \"ERROR\":\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null,\n        //role: null,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nvar NoMatch = (props) => {\n  var goApp = () => props.history.push(\"/\");\n  return <div>Route did not match\n    <button onClick={goApp}>Go Home</button></div>;\n};\n\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  useEffect(() => {\n\n    if (state.isAuthenticated === null) {\n      http\n        .get(`${apiEndpoint}/api/loggedUser`)\n        .then((resp) => {\n          dispatch({\n            type: \"LOGIN\",\n            //payload: { role: resp.data },\n          });\n        })\n        .catch((error) => {\n          const unexpectedError = error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n          if (!unexpectedError || (error.response && error.response.status === 404)) {\n            dispatch({\n              type: \"ERROR\",\n            });\n            return(<div className=\"modal\" tabindex=\"-1\">\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Įvyko klaida, puslapis nurodytu adresu nepasiekiamas</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>)\n            \n          }\n          else dispatch({\n            type: \"ERROR\",\n            payload: error.response.status,\n          });\n        });\n    }\n  }, [state.isAuthenticated]);\n\n  if (state.isAuthenticated) {\n\n    return (\n      <AuthContext.Provider value={{ state, dispatch }}>\n        <CommonErrorHandler>\n          <div className=\"container-fluid px-0\">\n            <Switch>\n              <Route exact path='/' component={App} />\n              <Route path='/pages/Admin' component={Admin} />\n              <Route path='/registracija' component={Registracija} />             <Route path='/:id' component={Product} />\n              <Route path=\"*\" component={NoMatch} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </CommonErrorHandler>\n      </AuthContext.Provider>\n    );\n\n  } else if (state.isAuthenticated === false) {\n    return (\n      <div>\n        <AuthContext.Provider value={{ state, dispatch }}>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route path=\"*\">\n              <Redirect to=\"/login\" />\n            </Route>\n          </Switch>\n        </AuthContext.Provider>\n      </div>\n    );\n  }\n  else return (<div>Loading page\n  </div>)\n}\n\nexport default App;\n\n// function App() {\n//    const { showusername, cart } = useContext(LoginContext);\n//   return (\n//     <div className=\"App\">\n\n//       <main>\n// \t<div className=\"row\">\n//         <div className=\"col \">\n//           {/* <LoginContext.Provider value={{username, setUsername, setShowusername}}> */}\n//             {showusername ? <ShowUser /> : <Login />}\n//           {/* </LoginContext.Provider> */}\n//         </div>\n//         </div>\n//           <ProductListContainer />\n//       </main>\n//       {/* </LoginContext.Provider> */}\n//     </div>\n//   );\n// }\n\n\n//export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Switch,  Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n// import { useParams, useLocation, useHistory, useRouteMatch } \n//         from 'react-router-dom';\n\n// import { Helmet } from \"react-helmet\";\n\n\n// const TITLE = 'My Page Title';\n\ndocument.title =\n  \"Pavadinimas\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"*\" component={App} />\n        </Switch>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// ReactDOM.render((\n//   <div>\n//     <BrowserRouter basename={process.env.PUBLIC_URL}>\n//       <AppContainer>\n//         <Switch>\n//           <Route exact path='/' component={ App } />\n//           <Route path='/pages/Admin' component={ Admin } />\n//           <Route path='/registracija' component={ Registracija } />\n//           <Route path='/:id'  component={ Product } />\n//           <Route path=\"*\" component={ NoMatch } />\n//           <Route component={ NoMatch } />\n//         </Switch>\n//       </AppContainer>\n//     </BrowserRouter>\n//     {/* <Helmet>\n//       <title>{TITLE}</title>\n//     </Helmet> */}\n//   </div>\n// ), document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}